{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriabredihina/Downloads/skypro-music-Course-work/src/components/AudioPlayer/AudioPlayer.jsx\";\nimport React from \"react\";\nimport * as S from \"./AudioPlayerStyle\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { BarPlayerProgress } from \"../BarPlayerProgress/BarPlayerProgress\";\nimport { AudioPlayerIcons } from \"../AudioPlayerIcons/AudioPlayerIcons\";\nimport { VolumeBlock } from \"../VolumeBlock/VolumeBlock\";\nimport { isPlayingSelector, currentPlaylistSelector, indexCurrentTrackSelector, shuffledSelector, shuffledAllTracksSelector } from \"../../store/selectors/track\";\nimport { setIsPlaying, setNextTrack, setPrevTrack, toggleShuffleTracks } from \"../../store/slices/track\";\nimport { useSetLikeMutation, useSetDislikeMutation } from \"../../serviseQuery/tracks\";\nexport function AudioPlayer({\n  isLoading,\n  currentTrack\n}) {\n  var _currentTrack$stared_;\n  const dispatch = useDispatch();\n  const isPlaying = useSelector(isPlayingSelector);\n  const shuffled = useSelector(shuffledSelector);\n  const shuffledAllTracks = useSelector(shuffledAllTracksSelector);\n  const tracks = useSelector(currentPlaylistSelector);\n  const [timeProgress, setTimeProgress] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const audioRef = useRef(null);\n  const indexCurrentTrack = useSelector(indexCurrentTrackSelector);\n  const handleStart = () => {\n    audioRef.current.play();\n    dispatch(setIsPlaying(true));\n  };\n  const handleStop = () => {\n    audioRef.current.pause();\n    dispatch(setIsPlaying(false));\n  };\n  const togglePlay = isPlaying ? handleStop : handleStart;\n  const arrayTracksAll = shuffled ? shuffledAllTracks : tracks;\n  useEffect(() => {\n    handleStart();\n    audioRef.current.onended = () => {\n      if (indexCurrentTrack < arrayTracksAll.length - 1) {\n        dispatch(setNextTrack({\n          trackNext: arrayTracksAll[arrayTracksAll.indexOf(currentTrack) + 1],\n          indexNextTrack: arrayTracksAll.indexOf(currentTrack) + 1\n        }));\n      }\n      dispatch(setIsPlaying(false));\n    };\n  }, [currentTrack]);\n  const onLoadedMetadata = () => {\n    setDuration(audioRef.current.duration);\n  };\n  const onTimeUpdate = () => {\n    setTimeProgress(audioRef.current.currentTime);\n  };\n  const [repeatTrack, setRepeatTrack] = useState(false);\n  const toggleTrackRepeat = () => {\n    audioRef.current.loop = !repeatTrack;\n    setRepeatTrack(!repeatTrack);\n  };\n  const toggleCurrentTrack = alt => {\n    if (alt === \"next\" && indexCurrentTrack < arrayTracksAll.length - 1) {\n      const indexNextTrack = arrayTracksAll.indexOf(currentTrack) + 1;\n      console.log(\"Next\", arrayTracksAll[indexNextTrack]);\n      return dispatch(setNextTrack({\n        trackNext: arrayTracksAll[indexNextTrack],\n        indexNextTrack\n      }));\n    }\n    if (alt === \"prev\" && indexCurrentTrack > 0) {\n      const indexPredTrack = arrayTracksAll.indexOf(currentTrack) - 1;\n      console.log(\"Pred\", arrayTracksAll[indexPredTrack]);\n      return dispatch(setPrevTrack({\n        trackPred: arrayTracksAll[indexPredTrack],\n        indexPredTrack\n      }));\n    }\n  };\n  const [setLike] = useSetLikeMutation();\n  const [setDislike] = useSetDislikeMutation();\n  const auth = JSON.parse(localStorage.getItem(\"user\"));\n  const isUserLike = Boolean(currentTrack === null || currentTrack === void 0 ? void 0 : (_currentTrack$stared_ = currentTrack.stared_user) === null || _currentTrack$stared_ === void 0 ? void 0 : _currentTrack$stared_.find(user => user.id === auth.id));\n  console.log(auth.id);\n  const [isLiked, setIsLiked] = useState(isUserLike);\n  useEffect(() => {\n    if (currentTrack === null || currentTrack === void 0 ? void 0 : currentTrack.stared_user) {\n      setIsLiked(isUserLike);\n    } else {\n      setIsLiked(true);\n    }\n  }, [isUserLike, currentTrack === null || currentTrack === void 0 ? void 0 : currentTrack.stared_user]);\n  const handleLike = async id => {\n    setIsLiked(true);\n    await setLike({\n      id\n    }).unwrap();\n  };\n  const handleDislike = async id => {\n    setIsLiked(false);\n    await setDislike({\n      id\n    }).unwrap();\n  };\n  const toggleLikeDislike = id => isLiked ? handleDislike(id) : handleLike(id);\n  return /*#__PURE__*/React.createElement(S.bar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    src: currentTrack.track_file,\n    ref: audioRef,\n    onTimeUpdate: onTimeUpdate,\n    onLoadedMetadata: onLoadedMetadata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(S.barContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BarPlayerProgress, {\n    duration: duration,\n    timeProgress: timeProgress,\n    audioRef: audioRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(S.barPlayerBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(S.barPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(S.playerControls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AudioPlayerIcons, {\n    alt: \"prev\",\n    click: () => {\n      toggleCurrentTrack(\"prev\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AudioPlayerIcons, {\n    alt: isPlaying ? \"pause\" : \"play\",\n    click: togglePlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AudioPlayerIcons, {\n    alt: \"next\",\n    click: () => {\n      toggleCurrentTrack(\"next\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AudioPlayerIcons, {\n    alt: \"repeat\",\n    click: toggleTrackRepeat,\n    isActive: repeatTrack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AudioPlayerIcons, {\n    alt: \"shuffle\",\n    click: () => {\n      dispatch(toggleShuffleTracks(!shuffled));\n    },\n    isActive: shuffled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(S.playerTrackPlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(S.trackPlayContain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(S.trackPlayImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(S.trackPlaySvg, {\n    alt: \"music\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"img/icon/sprite.svg#icon-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }))), !isLoading ? /*#__PURE__*/React.createElement(S.trackPlayAuthor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(S.trackPlayAuthorLink, {\n    href: \"http://\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, currentTrack.name)) : /*#__PURE__*/React.createElement(S.SkeletonPlayBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }), !isLoading ? /*#__PURE__*/React.createElement(S.trackPlayAlbum, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(S.trackPlayAlbumLink, {\n    href: \"http://\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, currentTrack.author)) : /*#__PURE__*/React.createElement(S.SkeletonPlayBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(S.trackPlayLikeDis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(S.trackPlayLike, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AudioPlayerIcons, {\n    alt: \"like\",\n    click: () => {\n      toggleLikeDislike(currentTrack === null || currentTrack === void 0 ? void 0 : currentTrack.id);\n    },\n    isActive: isLiked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(S.trackPlayDislike, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(VolumeBlock, {\n    audioRef: audioRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["React","S","useState","useEffect","useRef","useSelector","useDispatch","BarPlayerProgress","AudioPlayerIcons","VolumeBlock","isPlayingSelector","currentPlaylistSelector","indexCurrentTrackSelector","shuffledSelector","shuffledAllTracksSelector","setIsPlaying","setNextTrack","setPrevTrack","toggleShuffleTracks","useSetLikeMutation","useSetDislikeMutation","AudioPlayer","isLoading","currentTrack","_currentTrack$stared_","dispatch","isPlaying","shuffled","shuffledAllTracks","tracks","timeProgress","setTimeProgress","duration","setDuration","audioRef","indexCurrentTrack","handleStart","current","play","handleStop","pause","togglePlay","arrayTracksAll","onended","length","trackNext","indexOf","indexNextTrack","onLoadedMetadata","onTimeUpdate","currentTime","repeatTrack","setRepeatTrack","toggleTrackRepeat","loop","toggleCurrentTrack","alt","console","log","indexPredTrack","trackPred","setLike","setDislike","auth","JSON","parse","localStorage","getItem","isUserLike","Boolean","stared_user","find","user","id","isLiked","setIsLiked","handleLike","unwrap","handleDislike","toggleLikeDislike","createElement","bar","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","track_file","ref","barContent","barPlayerBlock","barPlayer","playerControls","click","isActive","playerTrackPlay","trackPlayContain","trackPlayImage","trackPlaySvg","xlinkHref","trackPlayAuthor","trackPlayAuthorLink","href","name","SkeletonPlayBar","trackPlayAlbum","trackPlayAlbumLink","author","trackPlayLikeDis","trackPlayLike","trackPlayDislike"],"sources":["/Users/viktoriabredihina/Downloads/skypro-music-Course-work/src/components/AudioPlayer/AudioPlayer.jsx"],"sourcesContent":["import React from \"react\";\nimport * as S from \"./AudioPlayerStyle\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { BarPlayerProgress } from \"../BarPlayerProgress/BarPlayerProgress\";\nimport { AudioPlayerIcons } from \"../AudioPlayerIcons/AudioPlayerIcons\";\nimport { VolumeBlock } from \"../VolumeBlock/VolumeBlock\";\nimport {\n  isPlayingSelector,\n  currentPlaylistSelector,\n  indexCurrentTrackSelector,\n  shuffledSelector,\n  shuffledAllTracksSelector,\n} from \"../../store/selectors/track\";\nimport {\n  setIsPlaying,\n  setNextTrack,\n  setPrevTrack,\n  toggleShuffleTracks,\n} from \"../../store/slices/track\";\nimport {\n  useSetLikeMutation,\n  useSetDislikeMutation,\n} from \"../../serviseQuery/tracks\";\n\nexport function AudioPlayer({ isLoading, currentTrack }) {\n  const dispatch = useDispatch();\n  const isPlaying = useSelector(isPlayingSelector);\n  const shuffled = useSelector(shuffledSelector);\n  const shuffledAllTracks = useSelector(shuffledAllTracksSelector);\n  const tracks = useSelector(currentPlaylistSelector);\n  const [timeProgress, setTimeProgress] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const audioRef = useRef(null);\n  const indexCurrentTrack = useSelector(indexCurrentTrackSelector);\n\n  const handleStart = () => {\n    audioRef.current.play();\n    dispatch(setIsPlaying(true));\n  };\n  const handleStop = () => {\n    audioRef.current.pause();\n    dispatch(setIsPlaying(false));\n  };\n\n  const togglePlay = isPlaying ? handleStop : handleStart;\n  const arrayTracksAll = shuffled ? shuffledAllTracks : tracks;\n\n  useEffect(() => {\n    handleStart();\n    audioRef.current.onended = () => {\n      if (indexCurrentTrack < arrayTracksAll.length - 1) {\n        dispatch(\n          setNextTrack({\n            trackNext: arrayTracksAll[arrayTracksAll.indexOf(currentTrack) + 1],\n            indexNextTrack: arrayTracksAll.indexOf(currentTrack) + 1,\n          })\n        );\n      }\n      dispatch(setIsPlaying(false));\n    };\n  }, [currentTrack]);\n\n  const onLoadedMetadata = () => {\n    setDuration(audioRef.current.duration);\n  };\n  const onTimeUpdate = () => {\n    setTimeProgress(audioRef.current.currentTime);\n  };\n\n  const [repeatTrack, setRepeatTrack] = useState(false);\n\n  const toggleTrackRepeat = () => {\n    audioRef.current.loop = !repeatTrack;\n    setRepeatTrack(!repeatTrack);\n  };\n  const toggleCurrentTrack = (alt) => {\n    if (alt === \"next\" && indexCurrentTrack < arrayTracksAll.length - 1) {\n      const indexNextTrack = arrayTracksAll.indexOf(currentTrack) + 1;\n      console.log(\"Next\", arrayTracksAll[indexNextTrack]);\n      return dispatch(\n        setNextTrack({\n          trackNext: arrayTracksAll[indexNextTrack],\n          indexNextTrack,\n        })\n      );\n    }\n    if (alt === \"prev\" && indexCurrentTrack > 0) {\n      const indexPredTrack = arrayTracksAll.indexOf(currentTrack) - 1;\n      console.log(\"Pred\", arrayTracksAll[indexPredTrack]);\n      return dispatch(\n        setPrevTrack({\n          trackPred: arrayTracksAll[indexPredTrack],\n          indexPredTrack,\n        })\n      );\n    }\n  };\n  const [setLike] = useSetLikeMutation();\n  const [setDislike] = useSetDislikeMutation();\n  const auth = JSON.parse(localStorage.getItem(\"user\"));\n  const isUserLike = Boolean(\n    currentTrack?.stared_user?.find((user) => user.id === auth.id)\n  );\n  console.log(auth.id);\n  const [isLiked, setIsLiked] = useState(isUserLike);\n  useEffect(() => {\n    if (currentTrack?.stared_user) {\n      setIsLiked(isUserLike);\n    } else {\n      setIsLiked(true);\n    }\n  }, [isUserLike, currentTrack?.stared_user]);\n\n  const handleLike = async (id) => {\n    setIsLiked(true);\n    await setLike({ id }).unwrap();\n  };\n\n  const handleDislike = async (id) => {\n    setIsLiked(false);\n    await setDislike({ id }).unwrap();\n  };\n\n  const toggleLikeDislike = (id) =>\n    isLiked ? handleDislike(id) : handleLike(id);\n\n  return (\n    <S.bar>\n      <audio\n        src={currentTrack.track_file}\n        ref={audioRef}\n        onTimeUpdate={onTimeUpdate}\n        onLoadedMetadata={onLoadedMetadata}\n      />\n      <S.barContent>\n        <BarPlayerProgress\n          duration={duration}\n          timeProgress={timeProgress}\n          audioRef={audioRef}\n        />\n        <S.barPlayerBlock>\n          <S.barPlayer>\n            <S.playerControls>\n              <AudioPlayerIcons\n                alt=\"prev\"\n                click={() => {\n                  toggleCurrentTrack(\"prev\");\n                }}\n              />\n              <AudioPlayerIcons\n                alt={isPlaying ? \"pause\" : \"play\"}\n                click={togglePlay}\n              />\n              <AudioPlayerIcons\n                alt=\"next\"\n                click={() => {\n                  toggleCurrentTrack(\"next\");\n                }}\n              />\n              <AudioPlayerIcons\n                alt=\"repeat\"\n                click={toggleTrackRepeat}\n                isActive={repeatTrack}\n              />\n              <AudioPlayerIcons\n                alt=\"shuffle\"\n                click={() => {\n                  dispatch(toggleShuffleTracks(!shuffled));\n                }}\n                isActive={shuffled}\n              />\n            </S.playerControls>\n            <S.playerTrackPlay>\n              <S.trackPlayContain>\n                <S.trackPlayImage>\n                  <S.trackPlaySvg alt=\"music\">\n                    <use xlinkHref=\"img/icon/sprite.svg#icon-note\" />\n                  </S.trackPlaySvg>\n                </S.trackPlayImage>\n\n                {!isLoading ? (\n                  <S.trackPlayAuthor>\n                    <S.trackPlayAuthorLink href=\"http://\">\n                      {currentTrack.name}\n                    </S.trackPlayAuthorLink>\n                  </S.trackPlayAuthor>\n                ) : (\n                  <S.SkeletonPlayBar />\n                )}\n\n                {!isLoading ? (\n                  <S.trackPlayAlbum>\n                    <S.trackPlayAlbumLink href=\"http://\">\n                      {currentTrack.author}\n                    </S.trackPlayAlbumLink>\n                  </S.trackPlayAlbum>\n                ) : (\n                  <S.SkeletonPlayBar />\n                )}\n              </S.trackPlayContain>\n              <S.trackPlayLikeDis>\n                <S.trackPlayLike>\n                  <AudioPlayerIcons\n                    alt=\"like\"\n                    click={() => {\n                      toggleLikeDislike(currentTrack?.id);\n                    }}\n                    isActive={isLiked}\n                  />\n                </S.trackPlayLike>\n                <S.trackPlayDislike>\n                </S.trackPlayDislike>\n              </S.trackPlayLikeDis>\n            </S.playerTrackPlay>\n          </S.barPlayer>\n          <VolumeBlock audioRef={audioRef} />\n        </S.barPlayerBlock>\n      </S.barContent>\n    </S.bar>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}