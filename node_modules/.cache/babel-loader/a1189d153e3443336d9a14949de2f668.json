{"ast":null,"code":"export async function getTracksAll() {\n  const response = await fetch(\"https://skypro-music-api.skyeng.tech/catalog/track/all/\", {\n    method: \"GET\"\n  });\n  if (!response.ok) {\n    throw new Error(\"Ошибка сервера\");\n  }\n  const data = await response.json();\n  return data;\n}\nexport async function RegistrationApi(email, password) {\n  return fetch(\"https://skypro-music-api.skyeng.tech/user/signup/\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password,\n      username: email\n    }),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).catch(error => {\n    if (error.message === \"Failed to fetch\") {\n      throw new Error(\"Нет подключения к интернету\");\n    }\n  }).then(response => {\n    if (response.status === 400) {\n      return response.json().then(errorResponse => {\n        if (errorResponse.username) {\n          throw new Error(errorResponse.username);\n        }\n        if (errorResponse.email) {\n          throw new Error(errorResponse.email);\n        }\n        if (errorResponse.password) {\n          throw new Error(errorResponse.password);\n        }\n      });\n    }\n    if (response.status === 500) {\n      throw new Error(\"Сервер сломался\");\n    }\n    return response.json();\n  });\n}\nexport async function LoginApi(email, password) {\n  return fetch(\"https://skypro-music-api.skyeng.tech/user/login/\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).catch(error => {\n    if (error.message === \"Failed to fetch\") {\n      throw new Error(\"Нет подключения к интернету\");\n    }\n  }).then(response => {\n    if (response.status === 400) {\n      return response.json().then(errorResponse => {\n        if (errorResponse.email) {\n          throw new Error(errorResponse.email);\n        }\n        if (errorResponse.password) {\n          throw new Error(errorResponse.password);\n        }\n        throw new Error(\"Произошла неизвестная ошибка.\");\n      });\n    }\n    if (response.status === 401) {\n      return response.json().then(errorResponse => {\n        throw new Error(errorResponse.detail);\n      });\n    }\n    return response.json();\n  });\n}","map":{"version":3,"names":["getTracksAll","response","fetch","method","ok","Error","data","json","RegistrationApi","email","password","body","JSON","stringify","username","headers","catch","error","message","then","status","errorResponse","LoginApi","detail"],"sources":["/Users/viktoriabredihina/Downloads/skypro-music-Course-work/src/Api.js"],"sourcesContent":["export async function getTracksAll() {\n  const response = await fetch(\n    \"https://skypro-music-api.skyeng.tech/catalog/track/all/\",\n    {\n      method: \"GET\",\n    }\n  );\n  if (!response.ok) {\n    throw new Error(\"Ошибка сервера\");\n  }\n  const data = await response.json();\n  return data;\n}\n\nexport async function RegistrationApi(email, password) {\n  return fetch(\"https://skypro-music-api.skyeng.tech/user/signup/\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password,\n      username: email,\n    }),\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  })\n    .catch((error) => {\n      if (error.message === \"Failed to fetch\") {\n        throw new Error(\"Нет подключения к интернету\");\n      }\n    })\n    .then((response) => {\n      if (response.status === 400) {\n        return response.json().then((errorResponse) => {\n          if (errorResponse.username) {\n            throw new Error(errorResponse.username);\n          }\n          if (errorResponse.email) {\n            throw new Error(errorResponse.email);\n          }\n          if (errorResponse.password) {\n            throw new Error(errorResponse.password);\n          }\n        });\n      }\n      if (response.status === 500) {\n        throw new Error(\"Сервер сломался\");\n      }\n      return response.json();\n    });\n}\n\nexport async function LoginApi(email, password) {\n  return fetch(\"https://skypro-music-api.skyeng.tech/user/login/\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password,\n    }),\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  })\n    .catch((error) => {\n      if (error.message === \"Failed to fetch\") {\n        throw new Error(\"Нет подключения к интернету\");\n      }\n    })\n    .then((response) => {\n      if (response.status === 400) {\n        return response.json().then((errorResponse) => {\n          if (errorResponse.email) {\n            throw new Error(errorResponse.email);\n          }\n          if (errorResponse.password) {\n            throw new Error(errorResponse.password);\n          }\n          throw new Error(\"Произошла неизвестная ошибка.\");\n        });\n      }\n      if (response.status === 401) {\n        return response.json().then((errorResponse) => {\n          throw new Error(errorResponse.detail);\n        });\n      }\n      return response.json();\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}