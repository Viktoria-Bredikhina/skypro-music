{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriabredihina/Downloads/skypro-music/src/components/Filters/Filters.jsx\";\nimport React from \"react\";\nimport uniq from \"lodash/uniq\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as S from \"./FiltersStyle\";\nimport { TracksFilterCategory } from \"../TracksFilterCategory/TrackFilterCategory\";\nimport { setFilterPlaylist } from \"../../store/slices/track\";\nimport { filtersPlaylistSelector } from \"../../store/selectors/track\";\nfunction Filters({\n  selectedArrListFilter,\n  currentPage\n}) {\n  const dispatch = useDispatch();\n  const [activeCategoryFilter, setActiveCategoryFilter] = useState(\"\");\n  const selectedFiltersPlaylist = useSelector(filtersPlaylistSelector);\n  useEffect(() => {\n    console.log(\"author filter: \", selectedFiltersPlaylist === null || selectedFiltersPlaylist === void 0 ? void 0 : selectedFiltersPlaylist.authors);\n  }, [selectedFiltersPlaylist === null || selectedFiltersPlaylist === void 0 ? void 0 : selectedFiltersPlaylist.authors]);\n  useEffect(() => {\n    console.log(\"genres filter: \", selectedFiltersPlaylist === null || selectedFiltersPlaylist === void 0 ? void 0 : selectedFiltersPlaylist.genres);\n  }, [selectedFiltersPlaylist === null || selectedFiltersPlaylist === void 0 ? void 0 : selectedFiltersPlaylist.genres]);\n  return /*#__PURE__*/React.createElement(S.CenterBlockFilter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(S.filterDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(S.filterTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"\\u0418\\u0441\\u043A\\u0430\\u0442\\u044C \\u043F\\u043E:\"), /*#__PURE__*/React.createElement(TracksFilterCategory, {\n    nameCategory: \"\\u0438\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044E\",\n    numberSelectedValues: selectedFiltersPlaylist === null || selectedFiltersPlaylist === void 0 ? void 0 : selectedFiltersPlaylist.authors.length,\n    content: uniq(selectedArrListFilter === null || selectedArrListFilter === void 0 ? void 0 : selectedArrListFilter.map(track => track === null || track === void 0 ? void 0 : track.author)).map(author => /*#__PURE__*/React.createElement(S.FilterItem, {\n      key: author,\n      onClick: () => {\n        dispatch(setFilterPlaylist({\n          authors: author\n        }));\n      },\n      $isSelected: selectedFiltersPlaylist === null || selectedFiltersPlaylist === void 0 ? void 0 : selectedFiltersPlaylist.authors.includes(author),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, author)),\n    isActiveCategory: activeCategoryFilter,\n    setActiveCategory: setActiveCategoryFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), currentPage !== \"Category\" && /*#__PURE__*/React.createElement(TracksFilterCategory, {\n    nameCategory: \"\\u0436\\u0430\\u043D\\u0440\\u0443\",\n    isActiveCategory: activeCategoryFilter,\n    setActiveCategory: setActiveCategoryFilter,\n    numberSelectedValues: selectedFiltersPlaylist === null || selectedFiltersPlaylist === void 0 ? void 0 : selectedFiltersPlaylist.genres.length,\n    content: uniq(selectedArrListFilter === null || selectedArrListFilter === void 0 ? void 0 : selectedArrListFilter.map(track => track.genre)).map(genre => /*#__PURE__*/React.createElement(S.FilterItem, {\n      key: genre,\n      onClick: () => {\n        dispatch(setFilterPlaylist({\n          genres: genre\n        }));\n      },\n      $isSelected: selectedFiltersPlaylist === null || selectedFiltersPlaylist === void 0 ? void 0 : selectedFiltersPlaylist.genres.includes(genre),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, genre)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(S.filterDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(S.filterTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430:\"), /*#__PURE__*/React.createElement(TracksFilterCategory, {\n    nameCategory: selectedFiltersPlaylist === null || selectedFiltersPlaylist === void 0 ? void 0 : selectedFiltersPlaylist.sort,\n    isActiveCategory: activeCategoryFilter,\n    setActiveCategory: setActiveCategoryFilter,\n    numberSelectedValues: (selectedFiltersPlaylist === null || selectedFiltersPlaylist === void 0 ? void 0 : selectedFiltersPlaylist.sort) === \"По умолчанию\" ? 0 : 1,\n    content: [\"По умолчанию\", \"Сначала новые\", \"Сначала старые\"].map(item => /*#__PURE__*/React.createElement(S.FilterItem, {\n      key: item,\n      onClick: () => {\n        dispatch(setFilterPlaylist({\n          sort: item\n        }));\n      },\n      $isSelected: selectedFiltersPlaylist === null || selectedFiltersPlaylist === void 0 ? void 0 : selectedFiltersPlaylist.sort.includes(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, item)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n}\nexport default Filters;","map":{"version":3,"names":["React","uniq","useEffect","useState","useDispatch","useSelector","S","TracksFilterCategory","setFilterPlaylist","filtersPlaylistSelector","Filters","selectedArrListFilter","currentPage","dispatch","activeCategoryFilter","setActiveCategoryFilter","selectedFiltersPlaylist","console","log","authors","genres","createElement","CenterBlockFilter","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","filterDiv","filterTitle","nameCategory","numberSelectedValues","length","content","map","track","author","FilterItem","key","onClick","$isSelected","includes","isActiveCategory","setActiveCategory","genre","sort","item"],"sources":["/Users/viktoriabredihina/Downloads/skypro-music/src/components/Filters/Filters.jsx"],"sourcesContent":["import React from \"react\";\nimport uniq from \"lodash/uniq\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as S from \"./FiltersStyle\";\nimport { TracksFilterCategory } from \"../TracksFilterCategory/TrackFilterCategory\";\nimport { setFilterPlaylist } from \"../../store/slices/track\";\nimport { filtersPlaylistSelector } from \"../../store/selectors/track\";\n\nfunction Filters({ selectedArrListFilter, currentPage }) {\n  const dispatch = useDispatch();\n  const [activeCategoryFilter, setActiveCategoryFilter] = useState(\"\");\n  const selectedFiltersPlaylist = useSelector(filtersPlaylistSelector);\n\n  useEffect(() => {\n    console.log(\"author filter: \", selectedFiltersPlaylist?.authors);\n  }, [selectedFiltersPlaylist?.authors]);\n\n  useEffect(() => {\n    console.log(\"genres filter: \", selectedFiltersPlaylist?.genres);\n  }, [selectedFiltersPlaylist?.genres]);\n\n  return (\n    <S.CenterBlockFilter>\n      <S.filterDiv>\n        <S.filterTitle>Искать по:</S.filterTitle>\n        <TracksFilterCategory\n          nameCategory=\"исполнителю\"\n          numberSelectedValues={selectedFiltersPlaylist?.authors.length}\n          content={uniq(\n            selectedArrListFilter?.map((track) => track?.author)\n          ).map((author) => (\n            <S.FilterItem\n              key={author}\n              onClick={() => {\n                dispatch(setFilterPlaylist({ authors: author }));\n              }}\n              $isSelected={selectedFiltersPlaylist?.authors.includes(author)}\n            >\n              {author}\n            </S.FilterItem>\n          ))}\n          isActiveCategory={activeCategoryFilter}\n          setActiveCategory={setActiveCategoryFilter}\n        />\n        {currentPage !== \"Category\" && (\n          <TracksFilterCategory\n            nameCategory=\"жанру\"\n            isActiveCategory={activeCategoryFilter}\n            setActiveCategory={setActiveCategoryFilter}\n            numberSelectedValues={selectedFiltersPlaylist?.genres.length}\n            content={uniq(\n              selectedArrListFilter?.map((track) => track.genre)\n            ).map((genre) => (\n              <S.FilterItem\n                key={genre}\n                onClick={() => {\n                  dispatch(setFilterPlaylist({ genres: genre }));\n                }}\n                $isSelected={selectedFiltersPlaylist?.genres.includes(genre)}\n              >\n                {genre}\n              </S.FilterItem>\n            ))}\n          />\n        )}\n      </S.filterDiv>\n      <S.filterDiv>\n        <S.filterTitle>Сортировка:</S.filterTitle>\n        <TracksFilterCategory\n          nameCategory={selectedFiltersPlaylist?.sort}\n          isActiveCategory={activeCategoryFilter}\n          setActiveCategory={setActiveCategoryFilter}\n          numberSelectedValues={\n            selectedFiltersPlaylist?.sort === \"По умолчанию\" ? 0 : 1\n          }\n          content={[\"По умолчанию\", \"Сначала новые\", \"Сначала старые\"].map(\n            (item) => (\n              <S.FilterItem\n                key={item}\n                onClick={() => {\n                  dispatch(setFilterPlaylist({ sort: item }));\n                }}\n                $isSelected={selectedFiltersPlaylist?.sort.includes(item)}\n              >\n                {item}\n              </S.FilterItem>\n            )\n          )}\n        />\n      </S.filterDiv>\n    </S.CenterBlockFilter>\n  );\n}\nexport default Filters;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}