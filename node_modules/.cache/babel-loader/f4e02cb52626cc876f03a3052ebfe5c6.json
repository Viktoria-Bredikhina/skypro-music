{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const tokenQuery = createApi({\n  reducerPath: \"tokenQuery\",\n  tagTypes: [\"Tracks\"],\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://skypro-music-api.skyeng.tech/\"\n  }),\n  endpoints: build => ({\n    accessTokenUser: build.mutation({\n      query: body => ({\n        url: \"user/token/\",\n        method: \"POST\",\n        body,\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        invalidatesTags: [{\n          type: \"Tracks\",\n          id: \"LIST\"\n        }]\n      })\n    }),\n    refreshTokenUser: build.mutation({\n      query: body => ({\n        url: \"user/token/refresh/\",\n        method: \"POST\",\n        body,\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        invalidatesTags: [{\n          type: \"Tracks\",\n          id: \"LIST\"\n        }]\n      })\n    })\n  })\n});\nexport const {\n  useAccessTokenUserMutation,\n  useRefreshTokenUserMutation\n} = tokenQuery;","map":{"version":3,"names":["createApi","fetchBaseQuery","tokenQuery","reducerPath","tagTypes","baseQuery","baseUrl","endpoints","build","accessTokenUser","mutation","query","body","url","method","headers","invalidatesTags","type","id","refreshTokenUser","useAccessTokenUserMutation","useRefreshTokenUserMutation"],"sources":["/Users/viktoriabredihina/Downloads/skypro-music/src/serviseQuery/token.jsx"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const tokenQuery = createApi({\n  reducerPath: \"tokenQuery\",\n  tagTypes: [\"Tracks\"],\n\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://skypro-music-api.skyeng.tech/\",\n  }),\n\n  endpoints: (build) => ({\n    accessTokenUser: build.mutation({\n      query: (body) => ({\n        url: \"user/token/\",\n        method: \"POST\",\n        body,\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        invalidatesTags: [{ type: \"Tracks\", id: \"LIST\" }],\n      }),\n    }),\n    refreshTokenUser: build.mutation({\n      query: (body) => ({\n        url: \"user/token/refresh/\",\n        method: \"POST\",\n        body,\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        invalidatesTags: [{ type: \"Tracks\", id: \"LIST\" }],\n      }),\n    }),\n  }),\n});\n\nexport const { useAccessTokenUserMutation, useRefreshTokenUserMutation } =\n  tokenQuery;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAAC;EAClCG,WAAW,EAAE,YAAY;EACzBC,QAAQ,EAAE,CAAC,QAAQ,CAAC;EAEpBC,SAAS,EAAEJ,cAAc,CAAC;IACxBK,OAAO,EAAE;EACX,CAAC,CAAC;EAEFC,SAAS,EAAGC,KAAK,KAAM;IACrBC,eAAe,EAAED,KAAK,CAACE,QAAQ,CAAC;MAC9BC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,aAAa;QAClBC,MAAM,EAAE,MAAM;QACdF,IAAI;QACJG,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,eAAe,EAAE,CAAC;UAAEC,IAAI,EAAE,QAAQ;UAAEC,EAAE,EAAE;QAAO,CAAC;MAClD,CAAC;IACH,CAAC,CAAC;IACFC,gBAAgB,EAAEX,KAAK,CAACE,QAAQ,CAAC;MAC/BC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,qBAAqB;QAC1BC,MAAM,EAAE,MAAM;QACdF,IAAI;QACJG,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,eAAe,EAAE,CAAC;UAAEC,IAAI,EAAE,QAAQ;UAAEC,EAAE,EAAE;QAAO,CAAC;MAClD,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,0BAA0B;EAAEC;AAA4B,CAAC,GACtEnB,UAAU"},"metadata":{},"sourceType":"module"}